using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1
{
    public partial class malwaredetection : System.Web.UI.Page
    {
        Ransomeware m = new Ransomeware();
        RansomewareTableAdapters.MalwareTableAdapter l = new RansomewareTableAdapters.MalwareTableAdapter();
        Ransomeware.MalwareRow row;


        protected void Page_Load(object sender, EventArgs e)
        {
        }
        protected void malwaredetect_Click(object sender, EventArgs e)
        {
            row = m.Malware.NewMalwareRow();
            row.Querylength = Convert.ToInt32(Querylength.Text);
            row.domain_token_count = Convert.ToInt32(domain_token_count.Text);
            row.path_token_count = Convert.ToInt32(path_token_count.Text);
            row.longdomaintokenlen = Convert.ToInt32(longdomaintokenlen.Text);
            row.avgpathtokenlen = Convert.ToInt32(avgpathtokenlen.Text);
            row.tld = Convert.ToInt32(tld.Text);
            row.charcompace = Convert.ToInt32(charcompace.Text);
            row.charcompvowels = Convert.ToInt32(charcompvowels.Text);
            row.ldl_url = Convert.ToInt32(ldl_url.Text);
            row.ldl_path = Convert.ToInt32(ldl_url.Text);
            row.ldl_getArg = Convert.ToInt32(ldl_getArg.Text);
            row.dld_getArg = Convert.ToInt32(dld_getArg.Text);
            row.dld_path = Convert.ToInt32(dld_path.Text);
            row.pathLength = Convert.ToInt32(pathLength.Text);
            row.subDirLen = Convert.ToInt32(subDirLen.Text);
            row.this_fileExtLen = Convert.ToInt32(thisfileExtLen.Text);
            row.ArgLen = Convert.ToInt32(ArgLen.Text);
            row.ArgUrlRatio = Convert.ToDouble(ArgUrlRatio.Text);
            row.domainUrlRatio = Convert.ToDouble(domainUrlRatio.Text);
            row.pathDomainRatio = Convert.ToDouble(pathDomainRatio.Text);
            row.CharacterContinuityRate = Convert.ToDouble(CharacterContinuityRate.Text);
            row.NumberofDotsinURL = Convert.ToInt32(NumberofDotsinURL.Text);
            row.URL_DigitCount = Convert.ToInt32(URL_DigitCount.Text);
            row.URL_Letter_Count = Convert.ToInt32(URL_Letter_Count.Text);
            row.Extension_DigitCount = Convert.ToInt32(Extension_DigitCount.Text);
            row.Filename_LetterCount = Convert.ToInt32(Filename_LetterCount.Text);
            row.host_letter_count = Convert.ToInt32(host_letter_count.Text);
            row.Query_LetterCount = Convert.ToInt32(Query_LetterCount.Text);
            row.Domain_LongestWordLength = Convert.ToInt32(Domain_LongestWordLength.Text);
            row.Path_LongestWordLength = Convert.ToInt32(Path_LongestWordLength.Text);
            row.Arguments_LongestWordLength = Convert.ToInt32(Arguments_LongestWordLength.Text);
            //row.URL_sensitiveWord = Convert.ToBoolean(URL_sensitiveWord.Text);
            row.spcharUrl = Convert.ToInt32(spcharUrl.Text);
            row.delimeter_path = Convert.ToInt32(delimeter_path.Text);
            row.NumberRate_URL = Convert.ToDouble(NumberRateURL.Text);
            row.NumberRate_FileName = Convert.ToDouble(NumberRate_FileName.Text);
            row.NumberRate_AfterPath = Convert.ToDouble(NumberRate_AfterPath.Text);

            row.SymbolCount_URL = Convert.ToInt32(SymbolCount_URL.Text);
            row.SymbolCount_FileName = Convert.ToInt32(SymbolCount_FileName.Text);
            row.SymbolCount_Directoryname = Convert.ToInt32(SymbolCount_Directoryname.Text);
            row.Entropy_Afterpath = Convert.ToDouble(Entropy_Afterpath.Text);
            row.Entropy_Domain = Convert.ToDouble(Entropy_Domain.Text);
            row.Entropy_Extension = Convert.ToDouble(Entropy_Extension.Text);
            row.Entropy_Filename = Convert.ToDouble(Entropy_Filename.Text);
            row.Entropy_URL = Convert.ToDouble(Entropy_URL.Text);

            if (isurltrues.Checked)
            {
                row.URL_sensitiveWord = true;
            }
            else
            {
                row.URL_sensitiveWord = false;
            }
            m.Malware.Rows.Add(row);
            l.Update(row);
            int s = Convert.ToInt32(l.maxid());
            Response.Redirect("checkmalware.aspx?q=" + s);
        }

        
    }
}